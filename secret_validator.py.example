#!/usr/bin/env python3
# Use for pre commit
# chmod +x secret_validator.py
# cp secret_validator.py .git/hooks/pre-commit

### OLD VERSION - NOT USE !
import os, re, sys

# Check pattern
SECRET_PATTERN = r'^(?!#).*\b(DB_USER|DB_PASSWORD|KUBERNETES_API_URL|KUBERNETES_API_TOKEN): "\w+"'

def find_secrets(file_path):
    with open(file_path, 'r') as file:
        data = file.read()
        return re.findall(SECRET_PATTERN, data, re.MULTILINE)

def main():
    # Get changed list
    changed_files = os.popen('git diff --cached --name-only').read().splitlines()

    for file_path in changed_files:
        # Skip README.md
        if file_path == 'README.md':
            continue

        # Skip if file does not exist (it might have been deleted)
        if not os.path.exists(file_path):
            continue

        secrets = find_secrets(file_path)
        if secrets:
            print(f'Found secrets in {file_path}:')
            for secret in secrets:
                print(f'  {secret}')
            # Delete file from index
            os.system(f'git reset {file_path}')
            sys.exit(1)

if __name__ == '__main__':
    main()