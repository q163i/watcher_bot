---
name: main

on:
  push:
    branches: [ "main" ]

jobs:
  DockerBuildPushCheck:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        platform: ['linux/amd64, linux/arm64']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: romanolitvinov
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        push: true
        context: .
        tags: |
          romanolitvinov/watcher_bot:latest
        platforms: ${{ matrix.platform }}

    - name: 'Trivy:codescan'
      uses: aquasecurity/trivy-action@0.23.0
      with:
        scan-type: 'fs'
        hide-progress: true
        output: 'watcher_bot_trivy_codescan.txt'
        severity: 'HIGH,CRITICAL'
        format: 'table'

    - name: 'Trivy:imagescan'
      uses: aquasecurity/trivy-action@0.23.0
      with:
        image-ref: romanolitvinov/watcher_bot:latest
        format: 'table'
        output: 'watcher_bot_trivy_imagescan.txt'
      env:
        TRIVY_USERNAME: romanolitvinov
        TRIVY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 'Trivy:codescan output'
      run: |
        if [[ -s watcher_bot_trivy_codescan.txt ]]; then
          {
            echo "### [Artefacts] üìä Trivy:codescan"
            echo "<details><summary>Click to expand</summary>"
            echo ""
            echo '```terraform'
            cat watcher_bot_trivy_codescan.txt
            echo '```'
            echo "</details>"
          } >> $GITHUB_STEP_SUMMARY
        fi

    - name: 'Trivy:imagescan output'
      run: |
        if [[ -s watcher_bot_trivy_imagescan.txt ]]; then
          {
            echo "### [Artefacts] üê≥ Trivy:imagescan"
            echo "<details><summary>Click to expand</summary>"
            echo ""
            echo '```terraform'
            cat watcher_bot_trivy_imagescan.txt
            echo '```'
            echo "</details>"
          } >> $GITHUB_STEP_SUMMARY
        fi


#  CheckHelmValidatorScript:
#    needs:
#      - DockerBuildPushCheck
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v4
#
#    - name: Login to DockerHub
#      uses: docker/login-action@v3
#      with:
#        username: romanolitvinov
#        password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#    - name: Check Helm Charts
#      run: |
#        docker run -v $(pwd)/instances:/instances romanolitvinov/d2d_helm_validator:latest

  NotifySuccessBuild:
    needs:
#      - CheckHelmValidatorScript
      - DockerBuildPushCheck
    runs-on: ubuntu-latest
    env:
      GITHUB_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

    steps:
      - name: "Success: Notify Message"
        run: 'docker run -e "GITHUB_BUILD_STATUS=$GITHUB_BUILD_STATUS" -e "TOKEN=$TOKEN" -e "ALLOWED_USERS=$ALLOWED_USERS" -e "GITHUB_REPOSITORY=$GITHUB_REPOSITORY" -e "GITHUB_REF=$GITHUB_REF" -e "GITHUB_ACTOR=$GITHUB_ACTOR" -e "GITHUB_COMMIT_MESSAGE=$GITHUB_COMMIT_MESSAGE" -e "GITHUB_RUN_ID=$GITHUB_RUN_ID" romanolitvinov/watcher_bot:latest python3 /app/bot/SimpleMessage.py infoDeploySuccess'
        env:
          GITHUB_BUILD_STATUS: "üçèBuild Success"
          TOKEN: "${{ secrets.TOKEN }}"
          ALLOWED_USERS: "${{ secrets.ALLOWED_USERS }}"

  NotifyFailureBuild:
    needs:
#      - CheckHelmValidatorScript
      - DockerBuildPushCheck
    runs-on: ubuntu-latest
    if: failure()
    env:
      GITHUB_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}

    steps:
      - name: "Fail: Notify Message"
        run: 'docker run -e "GITHUB_BUILD_STATUS=$GITHUB_BUILD_STATUS" -e "TOKEN=$TOKEN" -e "ALLOWED_USERS=$ALLOWED_USERS" -e "GITHUB_REPOSITORY=$GITHUB_REPOSITORY" -e "GITHUB_REF=$GITHUB_REF" -e "GITHUB_ACTOR=$GITHUB_ACTOR" -e "GITHUB_COMMIT_MESSAGE=$GITHUB_COMMIT_MESSAGE" -e "GITHUB_RUN_ID=$GITHUB_RUN_ID" romanolitvinov/watcher_bot:latest python3 /app/bot/SimpleMessage.py infoDeployFail'
        env:
          GITHUB_BUILD_STATUS: "‚ö†Ô∏èBuild Fail"
          TOKEN: "${{ secrets.TOKEN }}"
          ALLOWED_USERS: "${{ secrets.ALLOWED_USERS }}"
